@page "/register"
@using keyraces.Server.Dtos
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JS

<h3>Registration</h3>

<EditForm Model="@model" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Name</label>
        <InputText @bind-Value="model.Name" class="form-control" />
    </div>
    <div class="mb-2">
        <label>Email</label>
        <InputText @bind-Value="model.Email" class="form-control" />
    </div>
    <div class="mb-2">
        <label>Password</label>
        <InputText @bind-Value="model.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Sign up</button>
</EditForm>

@code {
    private RegisterDto model = new();

    private async Task HandleRegister()
    {
        var opts = new Dictionary<string, object>
            {
                ["method"] = "POST",
                ["credentials"] = "include",
                ["headers"] = new Dictionary<string, string>
                {
                    ["Content-Type"] = "application/json"
                },
                ["body"] = JsonSerializer.Serialize(model)
            };

        var status = await JS.InvokeAsync<int>(
            "authInterop.fetchWithCredentials",
            "/api/auth/register",
            opts
        );

        Console.WriteLine($">>> fetch status: {status}");
        if (status == 200)
            Nav.NavigateTo("/train", forceLoad: true);
        else
            Console.WriteLine("Registration failed");
    }
}
