@page "/register"
@using keyraces.Server.Dtos
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthStateProvider

<h3>Registration</h3>

<EditForm Model="@model" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Name</label>
        <InputText @bind-Value="model.Name" class="form-control" />
    </div>
    <div class="mb-2">
        <label>Email</label>
        <InputText @bind-Value="model.Email" class="form-control" />
    </div>
    <div class="mb-2">
        <label>Password</label>
        <InputText @bind-Value="model.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Sign up</button>
</EditForm>

@code {
    private RegisterDto model = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            Nav.NavigateTo("/", forceLoad: true);
        }
    }

    private async Task HandleRegister()
    {
        var resp = await Http.PostAsJsonAsync("api/auth/register", model);
        if (resp.IsSuccessStatusCode)
        {
            Nav.NavigateTo("/train");
        }
        else
        {
            var err = await resp.Content.ReadAsStringAsync();
            Console.WriteLine("Register error: " + err);
        }
    }
}
