@page "/login"
@using System.Text.Json
@using System.Collections.Generic
@using keyraces.Server.Dtos
@inject IJSRuntime JS
@inject NavigationManager Nav

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Password</label>
        <InputText @bind-Value="loginModel.Password"
                   type="password"
                   class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginDto loginModel = new();

    private async Task HandleLogin()
    {
        // Собираем JS-опции
        var options = new Dictionary<string, object>
            {
                ["method"] = "POST",
                ["credentials"] = "include",    // ← чтобы браузер сохранял куки
                ["headers"] = new Dictionary<string, object>
                {
                    ["Content-Type"] = "application/json"
                },
                ["body"] = JsonSerializer.Serialize(loginModel)
            };

        var status = await JS.InvokeAsync<int>(
            "loginInterop.doLogin",
            "/api/auth/login",
            options);

        Console.WriteLine($">>> fetch status: {status}");
        if (status == 200)
        {
            // После того, как браузер получит Set-Cookie,
            // можно навигировать дальше.
            Nav.NavigateTo("/train", forceLoad: true);
        }
        else
        {
            Console.WriteLine(">>> Login failed");
        }
    }
}
